{"version":3,"sources":["components/MovieFilter.module.css","components/Movie.module.css","components/MoviesList.module.css","components/Movie.js","components/MovieFilter.js","components/MoviesList.js","components/SingleMovieDetail.js","App.js","index.js","components/SingleMovieDetail.module.css"],"names":["module","exports","Movie","props","className","classes","movie","title","poster","src","imageSrc","alt","releaseDate","openingText","link","to","id","MovieFilter","movie_filter","movie_filter__control","label","select","onChange","event","chosenYear","target","value","onChangeFilter","releaseYr","map","elem","i","key","idArray","MovieList","useState","filteredArray","setFilteredArray","isFilteredClick","setIsFilteredClick","changeFilterHandler","useCallback","receivedYr","updatedArr","movies","filter","release","posterPath","SingleMovieDetail","movieId","useParams","isLoading","setIsLoading","error","setError","description","descriptionObj","setDescriptionObj","useEffect","fetch","response","ok","Error","json","data","prevState","overview","fetchSingleMovieData","then","catch","message","loading","App","setMovies","history","useHistory","fetchMoviesHandler","dataArray","results","loadedMovieArray","item","push","content","length","MoviesList","Fragment","path","exact","onClick","ReactDOM","createRoot","document","getElementById","render","basename"],"mappings":"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","file":"static/js/main.e96eb1e3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"movie_filter\":\"MovieFilter_movie_filter__QEkeV\",\"movie_filter__control\":\"MovieFilter_movie_filter__control__KL2Db\",\"label\":\"MovieFilter_label__tYMbF\",\"select\":\"MovieFilter_select__21Pyc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movie\":\"Movie_movie__1mK8A\",\"poster\":\"Movie_poster__b_mSg\",\"link\":\"Movie_link__2y91J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movies-list\":\"MoviesList_movies-list__NlrJ9\"};","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport classes from \"./Movie.module.css\";\n\nconst Movie = (props) => {\n  return (\n    <li className={classes.movie}>\n      <h2>{props.title}</h2>\n      <img className={classes.poster} src={props.imageSrc} alt={props.title} />\n      <h3>{props.releaseDate}</h3>\n      <p>{props.openingText}</p>\n      <Link className={classes.link} to={`/movies/${props.id}`}>\n        View More\n      </Link>\n    </li>\n  );\n};\n\nexport default Movie;\n","import React from \"react\";\r\nimport classes from \"./MovieFilter.module.css\";\r\n\r\nconst MovieFilter = (props) => {\r\n  const dropdownChangeHandler = (event) => {\r\n    const chosenYear = event.target.value;\r\n\r\n    props.onChangeFilter(chosenYear);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.movie_filter}>\r\n      <div className={classes.movie_filter__control}>\r\n        <label className={classes.label}>Filter by year</label>\r\n        <select\r\n          //   value={props.selected}\r\n          className={classes.select}\r\n          onChange={dropdownChangeHandler}\r\n        >\r\n          {props.releaseYr.map((elem, i) => (\r\n            <option key={props.idArray[i]} value={elem}>\r\n              {elem}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default MovieFilter;\r\n","import React, { Fragment } from \"react\";\n\nimport Movie from \"./Movie\";\nimport classes from \"./MoviesList.module.css\";\nimport MovieFilter from \"./MovieFilter\";\nimport { useState, useCallback } from \"react\";\n\nconst MovieList = (props) => {\n  const [filteredArray, setFilteredArray] = useState([]);\n  const [isFilteredClick, setIsFilteredClick] = useState(false);\n\n  //////////////////////////////////////////////////////\n  ////////////////////////////////////////filtering/////////////////\n  const changeFilterHandler = useCallback((receivedYr) => {\n    setIsFilteredClick(true);\n    const updatedArr = props.movies.filter(\n      (elem) => elem.release === receivedYr\n    );\n    setFilteredArray(updatedArr);\n  }, []);\n\n  ///////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////\n  return (\n    <Fragment>\n      <MovieFilter\n        releaseYr={props.releaseYr}\n        idArray={props.movies.map((elem) => elem.id)}\n        onChangeFilter={changeFilterHandler}\n      />\n\n      <ul className={classes[\"movies-list\"]}>\n        {!isFilteredClick &&\n          props.movies.map((movie) => (\n            <Movie\n              id={movie.id}\n              key={movie.id}\n              title={movie.title}\n              releaseDate={movie.release}\n              openingText={movie.openingText}\n              imageSrc={movie.posterPath}\n            />\n          ))}\n        {isFilteredClick &&\n          filteredArray.map((movie) => (\n            <Movie\n              id={movie.id}\n              key={movie.id}\n              title={movie.title}\n              releaseDate={movie.release}\n              openingText={movie.openingText}\n              imageSrc={movie.posterPath}\n            />\n          ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default MovieList;\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport classes from \"./SingleMovieDetail.module.css\";\r\n\r\nfunction SingleMovieDetail() {\r\n  const params = useParams();\r\n  const movieId = params.movieId;\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [descriptionObj, setDescriptionObj] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    const fetchSingleMovieData = async () => {\r\n      const response = await fetch(\r\n        `https://movie-task.vercel.app/api/movie?movieId=${movieId}`\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Something went wrong!\");\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      setDescriptionObj((prevState) => ({\r\n        ...prevState,\r\n        title: data.data.title,\r\n        description: data.data.overview,\r\n      }));\r\n      setIsLoading(false);\r\n    };\r\n\r\n    fetchSingleMovieData()\r\n      .then(() => {})\r\n      .catch((error) => {\r\n        setError(error.message);\r\n        setIsLoading(false);\r\n      });\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <div className={classes.description}>\r\n      {isLoading && <h2 className={classes.loading}>Loading....</h2>}\r\n      {!isLoading && !error && (\r\n        <div>\r\n          <h2 className={classes.loading}>{descriptionObj.title}</h2>\r\n          <p className={classes.description}>{descriptionObj.description}</p>\r\n        </div>\r\n      )}\r\n      {!isLoading && error && <p className={classes.loading}>{error}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SingleMovieDetail;\r\n","import React, { useState, useCallback } from \"react\";\nimport { Route, Switch, useHistory } from \"react-router-dom\";\nimport MoviesList from \"./components/MoviesList\";\n\nimport \"./App.css\";\nimport SingleMovieDetail from \"./components/SingleMovieDetail\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const history = useHistory();\n\n  const fetchMoviesHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\n        \"https://movie-task.vercel.app/api/popular?page=1\"\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const data = await response.json();\n\n      const dataArray = data.data.results;\n\n      const loadedMovieArray = [];\n      for (const item of dataArray) {\n        loadedMovieArray.push({\n          id: item[\"id\"],\n          title: item[\"title\"],\n          release: item[\"release_date\"],\n          posterPath: `https://image.tmdb.org/t/p/original${item[\"poster_path\"]}`,\n        });\n      }\n\n      setMovies(loadedMovieArray);\n      history.push(\"/movies\");\n      setIsLoading(false);\n    } catch (error) {\n      setError(error.message);\n      setIsLoading(false);\n    }\n    setIsLoading(false);\n  }, [history]);\n\n  let content = <p>Found no movies.</p>;\n\n  if (movies.length > 0) {\n    content = (\n      <MoviesList\n        movies={movies}\n        releaseYr={movies.map((elem) => elem.release)}\n      />\n    );\n  }\n\n  if (error) {\n    content = <p>{error}</p>;\n  }\n\n  if (isLoading) {\n    content = <p>Loading...</p>;\n  }\n\n  return (\n    <React.Fragment>\n      <Switch>\n        <Route path=\"/\" exact>\n          <section>\n            {!isLoading && !error && (\n              <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n            )}\n            {!isLoading && error && <p>{error}</p>}\n            {isLoading && <p>Loading...</p>}\n          </section>\n        </Route>\n        <Route path=\"/movies\" exact>\n          <section>{content}</section>\n        </Route>\n\n        <Route path=\"/movies/:movieId\">\n          <SingleMovieDetail />\n        </Route>\n      </Switch>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\n\nroot.render(\n  <BrowserRouter basename=\"/ASSIGNMENT_MOVIE_DATA_FETCHING\">\n    <App />\n  </BrowserRouter>\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"SingleMovieDetail_description__1XxNs\",\"loading\":\"SingleMovieDetail_loading__jUhub\"};"],"sourceRoot":""}